version: "3.7"

services:

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 8000:80
      - 443:443
    volumes:
      # Main config
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log/:/var/log/nginx/
      - ./nginx/html:/var/www/html
      # Server blocks config
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - client
      - api

  client:
    container_name: client
    build: ./client
    restart: "always"
    volumes:
      - ./client/:/client/
    env_file:
      - ./.dev.common.env
      - ./client/.dev.env
    expose:
      - 3000

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: "no"
    volumes:
      # Recompile code on changes
      - ./api/src:/api/src
      - ./api/tsconfig.json:/api/tsconfig.json
      # the path after `:` (i.e. `/music/`) should match the path in
      # `MUSIC_LIB_DIR` variable in `./api/.dev.env`
      - /mnt/CE64EB6A64EB53AD/music_archive/:/music/
    env_file:
      - ./.dev.common.env
      - ./api/.dev.env
      - ./db-music/.dev.env
    # Publicly exposed ports
    ports:
      # node.js process is listening for a debugging client on
      - 9229:9229
    # Ports are not exposed publicly (i.e. to host machine); 
    # they are only exposed to other services:
    expose:
      # Node.js application server
      - 5000
    depends_on:
      - db-music
      
  db-music:
    container_name: db-music
    image: postgres
    restart: "no"
    env_file:
      - ./db-music/.dev.env
    # Publicly exposed ports (to simplify debugging)
    ports:
      - 54323:5432
    volumes:
      - ./db-music/init.sql:/docker-entrypoint-initdb.d/init.sql

networks:
  frontnet:
    driver: bridge
