version: "3"

services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 8000:80 # http
      - 443:443 # https
    volumes:
      # configure server
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
      #- ./nginx/log/:/var/log/nginx/
      # configure server blocks
      # - ./nginx/conf.d/:/etc/nginx/conf.d/
      #- ./nginx/html/:/var/www/html/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on: 
      - client

  client:
    container_name: client
    build: ./client
    restart: "always"
    volumes:
      - ./client/:/opt/client/
      - ./client.env:/opt/client/client.env
      - /app/node_modules/
    depends_on: 
     - api-server
       
  api-server:
    container_name: api-server
    build: ./api-server
    restart: "no"
    volumes:
      # the path after `:` (i.e. `/music/`) should match the path in
      # `MUSIC_LIB_PATH` variable in `api-server.env`
      - /mnt/9904b8b1-2f58-4bc1-a5de-aa1584088b5e/projects/musicbox/_source/music/:/music/
      # The path in `:/opt/api-server` should match the path in WORKDIR in
      # ./api-server/Dockerfile
      - ./api-server:/opt/api-server
    env_file:
      - ./common.env
      - ./api-server.env
      - ./track-storage.env
    ports:
      # node.js process is listening for a debugging client (e.g. vscode
      # debugger) on
      - 9229:9229
      # app is running on:
      - 9000:3000
    # expose:
    # Expose ports without publishing them to the host machine - theyâ€™ll only
    # be accessible to linked services. Only the internal port can be
    # specified
    # - 3000
    depends_on:
      - track-storage

  track-storage:
    container_name: track-storage
    image: postgres
    restart: "no"
    env_file:
      - ./api-server.env
      - ./track-storage.env
    ports:
      - 54323:5432
    volumes:
      - ./track-storage/init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./track-storage/volume/:/var/lib/postgresql/data

networks:
  frontnet:
    driver: bridge
