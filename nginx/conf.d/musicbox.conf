# Cache settings: expires map
map $sent_http_content_type $expires {
  default                    off;
  text/html                  epoch; # do not cache
  text/css                   max;
  application/javascript     max;
  ~image/                    max; # match all file types containing image/ in their MIME-type name (like "image/jpg", "image/png") 
}

# ###################################################

upstream client {
  server client:3000;
}

upstream api {
  server api-server:5000;
}

# Do not serve the request if the host header field is empty 
#
# Note: during development, add domain name to /etc/hosts and send requests to this domain:port, not localhost:8000. If you send requests to localhost, the HOST header will be empty ans this server block will activate, returning 444 error.
server {
  listen 80;
  server_name "" localhost 127.0.0.1;
  return 444;
}

server {
  listen 80;
  server_name musicbox.com www.musicbox.com;
  root /var/www/html;

  # Forward "host" header to upstream server
  proxy_set_header HOST $host;
  # Forward client IP information to upstream server
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  ##
  # Caching settings
  ##
  
  # Enable caching for static files (adds "Expires" and "Cache-Control" headers)
  expires $expires;

  location / {
    proxy_pass http://client;   
   
    proxy_intercept_errors on;

    # Activate caching responses from proxied servers
    proxy_cache MY_CACHE; 

	  ##
	  # Gzip Settings
	  ##

	  gzip on;

	  gzip_vary on;
	  # gzip_proxied any;
	  gzip_comp_level 6;
	  gzip_http_version 1.1;
	  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  }

  location ~* /api/.+ {
    rewrite /api/(.+)/*$ /$1 break;
    proxy_pass http://api;

    proxy_set_header HOST $host;
  }
  
  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header HOST $host;
  }

  ##
  # Error settings
  ##

  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location ~ ^(/404.html|/50x.html)$ {
    root /var/www/html/;
    internal;
  }
}
